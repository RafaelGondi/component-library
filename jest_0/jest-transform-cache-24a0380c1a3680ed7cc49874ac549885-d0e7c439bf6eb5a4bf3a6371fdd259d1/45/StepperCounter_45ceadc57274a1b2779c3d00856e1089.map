{"version":3,"sources":["StepperCounter.vue"],"names":[],"mappings":";;;;;;;;AAkEA;;AAlEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;;;AAJA;AADA;AAWA;AACA;AADA;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AA1BA;AAhBA","sourcesContent":["<template>\n    <div class=\"d-flex justify-content-between\">\n        <div\n            v-for=\"(step, index) in steps\"\n            :key=\"index\"\n            :class=\"index !== steps.length - 1 ? 'w-100' : ''\"\n        >\n            <div\n                class=\"d-flex align-items-center\"\n                :id=\"`step-${index + 1}`\"\n                @click=\"changeStep(index)\"\n            >\n                <div\n                    class=\"d-flex justify-content-center align-items-center cursor-pointer\"\n                    :class=\"circleStyle(step)\"\n                >\n                    <span\n                        v-if=\"!step.concluded\"\n                        class=\"not-concluded-step-text-color fs-14\"\n                    >\n                        {{ index + 1 }}\n                    </span>\n                    <check-icon\n                        v-else\n                        size=\"1x\"\n                        class=\"concluded-step\"\n                    />\n                </div>\n\n                <div \n                    v-if=\"\n                        index !== steps.length - 1 &&\n                        steps[index].concluded &&\n                        steps[index + 1].concluded\n                    \"\n                    class=\"concluded-stepper-divider\"\n                />\n                <div \n                    v-else-if=\"\n                        (index !== steps.length - 1 &&\n                        index > 0 &&\n                        steps[index].concluded &&\n                        steps[index - 1].concluded) ||\n                        (index !== steps.length - 1 &&\n                        index === 0 &&\n                        steps[index].concluded)\n                    \"\n                    class=\"in-progress-stepper-divider\"\n                />\n                <div \n                    v-else-if=\"index !== steps.length - 1\"\n                    class=\"common-stepper-divider\"\n                />\n\n            </div>\n            <div\n                class=\"label-container mt-2\"\n                :class=\"!step.active ? 'not-active-step-label' : ''\"\n            >\n                <small>{{ step.label }}</small>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n\nimport { CheckIcon } from 'vue-feather-icons'\n\nexport default {\n    props: {\n        steps: {\n            type: Array,\n            default: () => [],\n            required: true,\n            description: `A object with the properties 'label', and 'concluded'.\n                The 'label' property is the text that will be displayed under\n                the counter, and 'concluded' is the status (boolean) of the step.`,\n        }\n    },\n\n    components: {\n        CheckIcon,\n    },\n\n    methods: {\n        circleStyle(step) {\n            let style = '';\n\n            if (step.concluded) {\n                style += 'concluded-step';\n            } \n            \n            if (step.active){\n                style += 'active-step';\n            }\n\n            if (!step.active && !step.concluded) {\n                style += ' not-active-step';\n            }\n\n            return style;\n        },\n\n        changeStep(index) {\n            this.steps[index].active = true;\n            this.steps.forEach((item, i) => {\n                item.active = i === index ? true : false;\n            });\n\n            this.$emit('step_changed', index, this.steps[index]);\n        }\n    }\n}\n</script>\n<style>\n    .active-step, .not-active-step, .concluded-step {\n        border-radius: 50px;\n        min-width: 30px;\n        min-height: 30px;\n        border: 1.5px;\n        border-style: solid;\n    }\n\n    .active-step {\n        border-color: #00CBAD;\n    }\n\n    .concluded-step { \n        background-color: #00CBAD;\n        border-color: #00CBAD;\n        width: 30px;\n        height: 30px;\n    }\n\n    .not-active-step {\n        color: #BFC2C5;\n        border-color: #BFC2C5;\n    }\n\n    .not-concluded-step-text-color {\n        color: #00CBAD;\n    }\n\n    .common-stepper-divider, .in-progress-stepper-divider, .concluded-stepper-divider {\n        height: 3px;\n        width: 100%;\n    }\n\n    .common-stepper-divider {\n        background-color: #BFC2C5;\n    }\n\n    .in-progress-stepper-divider {\n        background: linear-gradient(90deg, #43E4CC 0%, #BFC2C5 67.57%);\n    }\n\n    .concluded-stepper-divider {\n        background: #00CBAD;\n    }\n\n    .concluded-step {\n        color: #fff;\n    }\n\n    .label-container {\n        max-width: 70px;\n        margin-left: -10px;\n        line-height: 1.0;\n        display: block;\n    }\n\n    .fs-14 {\n        font-size: 14px;\n    }\n\n    .cursor-pointer {\n        cursor: pointer;\n    }\n\n    .not-active-step-label {\n        color: #5d6369;\n    }\n</style>"]}