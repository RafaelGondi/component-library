{"version":3,"sources":["EmptyState.spec.js"],"names":["localVue","use","BootstrapVue","test","wrapper","EmptyState","propsData","showAddButton","expect","findAll","length","toBe","describe","headlineColor","headlineFontSize","bodyTextColor","bodyFontSize","buttonColor","buttonFontSize","borderRadius","vm","headlineStyle","toStrictEqual","bodyTextStyle","buttonStyle"],"mappings":";;;;AAAA;;AACA;;AACA;;AAEA,MAAMA,QAAQ,GAAG,gCAAjB;AACAA,QAAQ,CAACC,GAAT,CAAaC,qBAAb;AAEAC,IAAI,CAAC,+BAAD,EAAkC,MAAM;AAC3C,QAAMC,OAAO,GAAG,sBAAMC,mBAAN,EAAkB;AACjCL,IAAAA,QADiC;AAEjCM,IAAAA,SAAS,EAAE;AACVC,MAAAA,aAAa,EAAE;AADL;AAFsB,GAAlB,CAAhB;AAMAC,EAAAA,MAAM,CAACJ,OAAO,CAACK,OAAR,CAAgB,uBAAhB,EAAyCC,MAA1C,CAAN,CAAwDC,IAAxD,CAA6D,CAA7D;AACA,CARG,CAAJ;AAUAC,QAAQ,CAAC,mDAAD,EAAsD,MAAM;AACnET,EAAAA,IAAI,CAAC,2FAAD,EAA8F,MAAM;AACvG,UAAMC,OAAO,GAAG,sBAAMC,mBAAN,EAAkB;AACjCL,MAAAA,QADiC;AAEjCM,MAAAA,SAAS,EAAE;AACVO,QAAAA,aAAa,EAAE,KADL;AAEVC,QAAAA,gBAAgB,EAAE,EAFR;AAGVC,QAAAA,aAAa,EAAE,MAHL;AAIVC,QAAAA,YAAY,EAAE,EAJJ;AAKVC,QAAAA,WAAW,EAAE,OALH;AAMVC,QAAAA,cAAc,EAAE,EANN;AAOVC,QAAAA,YAAY,EAAE;AAPJ;AAFsB,KAAlB,CAAhB;AAaAX,IAAAA,MAAM,CAACJ,OAAO,CAACgB,EAAR,CAAWC,aAAZ,CAAN,CAAiCC,aAAjC,CAA+C;AAAE,0BAAoB,KAAtB;AAA6B,8BAAwB;AAArD,KAA/C;AACAd,IAAAA,MAAM,CAACJ,OAAO,CAACgB,EAAR,CAAWG,aAAZ,CAAN,CAAiCD,aAAjC,CAA+C;AAAE,2BAAqB,MAAvB;AAA+B,0BAAoB;AAAnD,KAA/C;AACAd,IAAAA,MAAM,CAACJ,OAAO,CAACgB,EAAR,CAAWI,WAAZ,CAAN,CAA+BF,aAA/B,CAA6C;AAAE,wBAAkB,OAApB;AAA6B,4BAAsB,MAAnD;AAA2D,yBAAmB;AAA9E,KAA7C;AACA,GAjBG,CAAJ;AAkBA,CAnBO,CAAR","sourcesContent":["import { mount, createLocalVue } from '@vue/test-utils';\nimport BootstrapVue from 'bootstrap-vue';\nimport EmptyState from '../../src/components/EmptyState.vue';\n\nconst localVue = createLocalVue();\nlocalVue.use(BootstrapVue);\n\ntest('Component is mounted properly', () => {\n\tconst wrapper = mount(EmptyState, {\n\t\tlocalVue,\n\t\tpropsData: {\n\t\t\tshowAddButton: true,\n\t\t},\n\t});\n\texpect(wrapper.findAll('.add-button-container').length).toBe(1);\n});\n\ndescribe(\"Prop 'headlineColor' and 'headlineFontSize' tests\", () => {\n\ttest(\"if the computed property 'headlineStyle' changes when the prop 'headlineColor' is changed\", () => {\n\t\tconst wrapper = mount(EmptyState, {\n\t\t\tlocalVue,\n\t\t\tpropsData: {\n\t\t\t\theadlineColor: 'red',\n\t\t\t\theadlineFontSize: 50,\n\t\t\t\tbodyTextColor: 'blue',\n\t\t\t\tbodyFontSize: 30,\n\t\t\t\tbuttonColor: 'green',\n\t\t\t\tbuttonFontSize: 20,\n\t\t\t\tborderRadius: 15,\n\t\t\t},\n\t\t});\n\n\t\texpect(wrapper.vm.headlineStyle).toStrictEqual({ \"--headline-color\": \"red\", \"--headline-font-size\": \"50px\" });\n\t\texpect(wrapper.vm.bodyTextStyle).toStrictEqual({ \"--body-text-color\": \"blue\", \"--body-text-size\": \"30px\" });\n\t\texpect(wrapper.vm.buttonStyle).toStrictEqual({ \"--button-color\": \"green\", \"--button-font-size\": \"20px\", \"--border-radius\": \"15px\" });\n\t});\n});"]}