dcf54b08e2549f617f603a868548c474
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _vueFeatherIcons = require("vue-feather-icons");

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
var _default = {
  components: {
    XIcon: _vueFeatherIcons.XIcon
  },
  props: {
    floatingMode: {
      type: Boolean,
      default: false,
      description: `When setted to true this prop makes
				the ActionBar to work floating above the content
				of the view, being placed in the bottom of the page.`
    },
    isDismissible: {
      type: Boolean,
      default: false,
      description: `When setted to true this prop displays
				an 'x' icon that emits a event that can be handled
				to close the ActionBar.`
    },
    bgColor: {
      type: String,
      default: '',
      description: `You can send colors in any format applicable
				to the 'background-color' property in order to overwrite
				the default ActionBar color.`
    }
  }
};
exports.default = _default;
})()
var defaultExport = (module.exports.__esModule) ? module.exports.default : module.exports;var __vue__options__ = (typeof defaultExport === "function"? defaultExport.options: defaultExport)
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"toolbar-container"},[_c('div',{staticClass:"toolbar",class:_vm.floatingMode ? 'fixed' : '',style:(_vm.bgColor !== '' ? ("background-color: " + _vm.bgColor) : '')},[_vm._t("description"),_vm._v(" "),_vm._t("buttons"),_vm._v(" "),(_vm.isDismissible)?_c('div',{staticClass:"icon-container ml-2",on:{"click":function($event){return _vm.$emit('close', true)}}},[_c('x-icon',{staticClass:"m-1",attrs:{"size":"0.8x"}})],1):_vm._e()],2)])}
__vue__options__.staticRenderFns = []

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFjdGlvbkJhci52dWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUErQkE7O0FBL0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFJQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFIQTtBQU9BO0FBQ0E7QUFDQTtBQUNBOzs7QUFIQTtBQU9BO0FBQ0E7QUFDQTtBQUNBOzs7QUFIQTtBQWZBO0FBSkEiLCJzb3VyY2VzQ29udGVudCI6WyI8dGVtcGxhdGU+XG5cdDxkaXYgY2xhc3M9XCJ0b29sYmFyLWNvbnRhaW5lclwiPlxuXHRcdDxkaXZcblx0XHRcdGNsYXNzPVwidG9vbGJhclwiXG5cdFx0XHQ6Y2xhc3M9XCJmbG9hdGluZ01vZGUgPyAnZml4ZWQnIDogJydcIlxuXHRcdFx0OnN0eWxlPVwiYmdDb2xvciAhPT0gJycgPyBgYmFja2dyb3VuZC1jb2xvcjogJHtiZ0NvbG9yfWAgOiAnJ1wiXG5cdFx0PlxuXHRcdFx0PHNsb3Rcblx0XHRcdFx0bmFtZT1cImRlc2NyaXB0aW9uXCJcblx0XHRcdC8+XG5cblx0XHRcdDxzbG90XG5cdFx0XHRcdGNsYXNzPVwicHgtMiBteC0xXCJcblx0XHRcdFx0bmFtZT1cImJ1dHRvbnNcIlxuXHRcdFx0Lz5cblxuXHRcdFx0PGRpdlxuXHRcdFx0XHR2LWlmPVwiaXNEaXNtaXNzaWJsZVwiXG5cdFx0XHRcdGNsYXNzPVwiaWNvbi1jb250YWluZXIgbWwtMlwiXG5cdFx0XHRcdEBjbGljaz1cIiRlbWl0KCdjbG9zZScsIHRydWUpXCJcblx0XHRcdD5cblx0XHRcdFx0PHgtaWNvblxuXHRcdFx0XHRcdHNpemU9XCIwLjh4XCJcblx0XHRcdFx0XHRjbGFzcz1cIm0tMVwiXG5cdFx0XHRcdC8+XG5cdFx0XHQ8L2Rpdj5cblx0XHQ8L2Rpdj5cblx0PC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IHsgWEljb24gfSBmcm9tICd2dWUtZmVhdGhlci1pY29ucydcbmV4cG9ydCBkZWZhdWx0IHtcblx0Y29tcG9uZW50czoge1xuXHRcdFhJY29uLFxuICBcdH0sXG5cdHByb3BzOiB7XG5cdFx0ZmxvYXRpbmdNb2RlOiB7XG5cdFx0XHR0eXBlOiBCb29sZWFuLFxuXHRcdFx0ZGVmYXVsdDogZmFsc2UsXG5cdFx0XHRkZXNjcmlwdGlvbjogYFdoZW4gc2V0dGVkIHRvIHRydWUgdGhpcyBwcm9wIG1ha2VzXG5cdFx0XHRcdHRoZSBBY3Rpb25CYXIgdG8gd29yayBmbG9hdGluZyBhYm92ZSB0aGUgY29udGVudFxuXHRcdFx0XHRvZiB0aGUgdmlldywgYmVpbmcgcGxhY2VkIGluIHRoZSBib3R0b20gb2YgdGhlIHBhZ2UuYFxuXHRcdH0sXG5cdFx0aXNEaXNtaXNzaWJsZToge1xuXHRcdFx0dHlwZTogQm9vbGVhbixcblx0XHRcdGRlZmF1bHQ6IGZhbHNlLFxuXHRcdFx0ZGVzY3JpcHRpb246IGBXaGVuIHNldHRlZCB0byB0cnVlIHRoaXMgcHJvcCBkaXNwbGF5c1xuXHRcdFx0XHRhbiAneCcgaWNvbiB0aGF0IGVtaXRzIGEgZXZlbnQgdGhhdCBjYW4gYmUgaGFuZGxlZFxuXHRcdFx0XHR0byBjbG9zZSB0aGUgQWN0aW9uQmFyLmBcblx0XHR9LFxuXHRcdGJnQ29sb3I6IHtcblx0XHRcdHR5cGU6IFN0cmluZyxcblx0XHRcdGRlZmF1bHQ6ICcnLFxuXHRcdFx0ZGVzY3JpcHRpb246IGBZb3UgY2FuIHNlbmQgY29sb3JzIGluIGFueSBmb3JtYXQgYXBwbGljYWJsZVxuXHRcdFx0XHR0byB0aGUgJ2JhY2tncm91bmQtY29sb3InIHByb3BlcnR5IGluIG9yZGVyIHRvIG92ZXJ3cml0ZVxuXHRcdFx0XHR0aGUgZGVmYXVsdCBBY3Rpb25CYXIgY29sb3IuYFxuXHRcdH0sXG5cdH0sXG59O1xuPC9zY3JpcHQ+XG48c3R5bGU+XG4udG9vbGJhci1jb250YWluZXIge1xuXHR3aWR0aDogMTAwJTtcblx0ZGlzcGxheTogZmxleDtcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi50b29sYmFyIHtcblx0Ym9yZGVyLXJhZGl1czogOHB4ICFpbXBvcnRhbnQ7XG5cdGJhY2tncm91bmQtY29sb3I6ICMzMDM1M0Y7XG5cdGJvdHRvbTogNzJweDtcblx0cGFkZGluZzogMC44cmVtIDFyZW07XG5cdGNvbG9yOiAjZmZmO1xuXHRkaXNwbGF5OiBmbGV4O1xuXHR6LWluZGV4OiAyO1xuXHRhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uZml4ZWQge1xuXHRwb3NpdGlvbjogZml4ZWQ7XG59XG5cbi5pY29uLWNvbnRhaW5lciB7XG5cdHBhZGRpbmc6IDJweCA0cHg7XG5cdGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDAyZDtcblx0Ym9yZGVyLXJhZGl1czogNTAlO1xuXHRjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5pY29uLWNvbnRhaW5lcjpob3ZlciB7XG5cdGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA0MTtcbn1cbjwvc3R5bGU+XG4iXX0=